import os
import vcf

VARIANT_NOT_CALLED = 1
VARIANT_ALLELES_MISMATCHED = 2
VARIANT_GENOTYPES_MISMATCHED = 3


def are_equal_alleles(a, b):
    return a.CHROM == b.CHROM and a.POS == b.POS and a.REF == b.REF and a.ALT == b.ALT

def are_equal_genotypes(a, b):
    return (not a.samples and not b.samples) or (a.samples and b.samples and a.samples[0]["GT"] == b.samples[0]["GT"])


def check_gvcf(original_gvcf_path, new_gvcf_path, chrom, minrep_pos, minrep_ref, minrep_alt, het_or_hom):
    """Checks whether the GVCF genotype generated by HaplotypeCaller when
    computing the reassemled bam matches the genotype in the original GVCF.

    Returns: A 3-tuple (x,y,z) where:
        x = True if the check succeeded
        y = An integer error code if the check failed
        z = An error message explaining the error code
    """
    assert os.path.isfile(new_gvcf_path), "new GVCF file not found: %s" % new_gvcf_path

    for r_new in vcf.Reader(filename=new_gvcf_path):
        if r_new.CHROM == chrom and str(r_new.POS) == str(minrep_pos):
            break
    else:
        return False, VARIANT_NOT_CALLED, "%(chrom)s:%(minrep_pos)s-%(minrep_ref)s-%(minrep_alt)s not found in %(new_gvcf_path)s" % locals()

    # being here means a row in the new GVCF matched the chrom/pos of the ExAC call
    f = vcf.Reader(filename=original_gvcf_path)
    r_original = f.fetch(r_new.CHROM, r_new.POS)

    if not are_equal_alleles(r_original, r_new):
        ref_orig, alt_orig = r_original.REF, r_original.ALT
        ref_new, alt_new = r_new.REF, r_new.ALT,
        return False, VARIANT_ALLELES_MISMATCHED, "%(chrom)s:%(minrep_pos)s-%(minrep_ref)s-%(minrep_alt)s alleles don't match: %(ref_orig)s/%(alt_orig)s vs %(ref_new)s/%(alt_new)s in %(original_gvcf_path)s vs %(new_gvcf_path)s" % locals()

    if not are_equal_genotypes(r_original, r_new):
        r_orig_samples = r_original.samples and r_original.samples[0]["GT"]
        r_new_samples = r_new.samples and r_new.samples[0]["GT"]
        return False, VARIANT_GENOTYPES_MISMATCHED, "%(chrom)s:%(minrep_pos)s-%(minrep_ref)s-%(minrep_alt)s genotypes don't match: %(r_orig_samples)s vs %(r_new_samples)s in %(original_gvcf_path)s vs %(new_gvcf_path)s" % locals()

    #print(str(r_original), r_original.samples[0])
    #print(str(r_new), r_new.samples[0])

    return True, 0, None
